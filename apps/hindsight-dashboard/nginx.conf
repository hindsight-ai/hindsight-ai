server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  # API proxy: forward /api/* to backend service
  location /api/ {
    proxy_pass http://hindsight-service:8000/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # Forward auth headers set by oauth2-proxy so backend can identify the user
    proxy_set_header X-Auth-Request-User $http_x_auth_request_user;
    proxy_set_header X-Auth-Request-Email $http_x_auth_request_email;
    proxy_set_header X-Auth-Request-Access-Token $http_x_auth_request_access_token;
    proxy_set_header Authorization $http_authorization;

    # CSRF mitigation: for mutating methods, only allow allowed origins
    # Use non-nested ifs to satisfy nginx conf constraints
    set $block_csrf 0;
    if ($request_method ~* "^(POST|PUT|PATCH|DELETE)$") { set $block_csrf 1; }
    # If no Origin header, do not block (same-origin navigations/forms often omit Origin)
    if ($http_origin = "") { set $block_csrf 0; }
    # Allow known origins
    if ($http_origin = "https://app.hindsight-ai.com") { set $block_csrf 0; }
    if ($http_origin = "http://localhost:3000") { set $block_csrf 0; }
    if ($http_origin = "http://localhost") { set $block_csrf 0; }
    # Block remaining modifying requests with disallowed Origin
    if ($block_csrf = 1) { return 403; }
    proxy_redirect off;
    proxy_read_timeout 300s;
  }

  # Serve static assets and fall back to SPA entrypoint
  location / {
    try_files $uri /index.html;
  }

  # Cache immutable built assets aggressively
  location /assets/ {
    expires 1y;
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }
}
