name: Deploy Hindsight AI with Docker Compose

on:
  push:
    branches: [ main, feat/docker-compose-deployment ]

jobs:
  build-and-push-hindsight-service:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Hindsight Service Docker image
        id: build-push-service
        uses: docker/build-push-action@v5
        with:
          context: apps/hindsight-service
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/hindsight-service:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/hindsight-service:latest
          file: apps/hindsight-service/Dockerfile

  build-and-push-hindsight-dashboard:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Hindsight Dashboard Docker image
        id: build-push-dashboard
        uses: docker/build-push-action@v5
        with:
          context: apps/hindsight-dashboard
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/hindsight-dashboard:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/hindsight-dashboard:latest
          file: apps/hindsight-dashboard/Dockerfile
          build-args: |
            REACT_APP_HINDSIGHT_SERVICE_API_URL=/api

  deploy:
    needs: [build-and-push-hindsight-service, build-and-push-hindsight-dashboard]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to remote server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ~/hindsight-ai-project
            cd ~/hindsight-ai-project

            # Create .env file
            echo "Creating .env file..."
            cat <<EOF > .env
            HINDSIGHT_SERVICE_IMAGE=ghcr.io/${{ github.repository_owner }}/hindsight-service:${{ github.sha }}
            HINDSIGHT_DASHBOARD_IMAGE=ghcr.io/${{ github.repository_owner }}/hindsight-dashboard:${{ github.sha }}
            CLOUDFLARE_API_EMAIL=${{ secrets.CLOUDFLARE_API_EMAIL }}
            CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}
            OAUTH2_PROXY_CLIENT_ID=${{ secrets.OAUTH2_PROXY_CLIENT_ID }}
            OAUTH2_PROXY_CLIENT_SECRET=${{ secrets.OAUTH2_PROXY_CLIENT_SECRET }}
            OAUTH2_PROXY_COOKIE_SECRET=${{ secrets.OAUTH2_PROXY_COOKIE_SECRET }}
            LLM_API_KEY=${{ secrets.LLM_API_KEY }}
            LLM_MODEL_NAME=${{ secrets.LLM_MODEL_NAME }}
            CONSOLIDATION_BATCH_SIZE=${{ secrets.CONSOLIDATION_BATCH_SIZE }}
            FALLBACK_SIMILARITY_THRESHOLD=${{ secrets.FALLBACK_SIMILARITY_THRESHOLD }}
            POSTGRES_USER=user
            POSTGRES_PASSWORD=password
            EOF

            # Create authorized_emails.txt
            echo "Creating authorized_emails.txt..."
            echo "${{ secrets.AUTHORIZED_EMAILS_CONTENT }}" > authorized_emails.txt

            # Copy configuration files
            echo "Copying configuration files..."
            scp -P ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r ${{ github.workspace }}/config ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/hindsight-ai-project/
            scp -P ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ github.workspace }}/docker-compose.yml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/hindsight-ai-project/docker-compose.yml

            # Replace email placeholder
            echo "Replacing email placeholder..."
            ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "sed -i 's/<email_placeholder>/${{ secrets.CLOUDFLARE_API_EMAIL }}/g' ~/hindsight-ai-project/config/traefik.yml"

            # Pull images and deploy
            echo "Pulling new images and deploying..."
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml up -d --force-recreate
            echo "Deployment successful!"
