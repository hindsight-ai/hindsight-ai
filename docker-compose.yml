services:
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: hindsight_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d hindsight_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - hindsight-ai
  traefik:
    image: traefik:v3.4.4
    container_name: traefik
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_DNS_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}
    command:
      - "--configFile=/config/traefik.yml"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config:/config:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - hindsight-ai
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.hindsight-ai.com`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.middlewares=oauth-middleware@file"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
    depends_on:
      - oauth2-proxy

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
    container_name: oauth2-proxy
    environment:
      OAUTH2_PROXY_CLIENT_ID: ${OAUTH2_PROXY_CLIENT_ID}
      OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET}
      OAUTH2_PROXY_COOKIE_SECRET: ${OAUTH2_PROXY_COOKIE_SECRET}
      OAUTH2_PROXY_REDIRECT_URL: https://dashboard.hindsight-ai.com/oauth2/callback,https://api.hindsight-ai.com/oauth2/callback,https://traefik.hindsight-ai.com/oauth2/callback
      OAUTH2_PROXY_PROVIDER: google
      OAUTH2_PROXY_EMAIL_DOMAINS: "*" # Allow any Google account, then filter by authorized_emails.txt
      OAUTH2_PROXY_AUTHENTICATED_EMAILS_FILE: /etc/oauth2-proxy/authorized_emails.txt
      OAUTH2_PROXY_HTTP_ADDRESS: 0.0.0.0:4180
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
      OAUTH2_PROXY_PASS_BASIC_AUTH: "false"
      OAUTH2_PROXY_PASS_USER_HEADERS: "true"
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
      OAUTH2_PROXY_COOKIE_SECURE: "true"
      OAUTH2_PROXY_COOKIE_DOMAIN: ".hindsight-ai.com"
      OAUTH2_PROXY_COOKIE_SAMESITE: lax
    command:
      - "--custom-templates-dir=/templates"
    networks:
      - hindsight-ai
    volumes:
      - ./authorized_emails.txt:/etc/oauth2-proxy/authorized_emails.txt:ro
      - ./templates:/templates:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth2-proxy.rule=(Host(`dashboard.hindsight-ai.com`) || Host(`api.hindsight-ai.com`) || Host(`traefik.hindsight-ai.com`)) && PathPrefix(`/oauth2`)"
      - "traefik.http.routers.oauth2-proxy.entrypoints=websecure"
      - "traefik.http.routers.oauth2-proxy.tls.certresolver=letsencrypt"
      - "traefik.http.services.oauth2-proxy.loadbalancer.server.port=4180"

  hindsight-service:
    image: ${HINDSIGHT_SERVICE_IMAGE:-hindsight-service:latest}
    build:
      context: ./apps/hindsight-service
      dockerfile: Dockerfile
    container_name: hindsight-service
    networks:
      - hindsight-ai
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/hindsight_db
      LLM_API_KEY: ${LLM_API_KEY}
      LLM_MODEL_NAME: ${LLM_MODEL_NAME}
      CONSOLIDATION_BATCH_SIZE: ${CONSOLIDATION_BATCH_SIZE}
      FALLBACK_SIMILARITY_THRESHOLD: ${FALLBACK_SIMILARITY_THRESHOLD}
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hindsight-service.rule=Host(`api.hindsight-ai.com`)"
      - "traefik.http.routers.hindsight-service.entrypoints=websecure"
      - "traefik.http.routers.hindsight-service.tls.certresolver=letsencrypt"
      - "traefik.http.services.hindsight-service.loadbalancer.server.port=8000"
      - "traefik.http.routers.hindsight-service.middlewares=oauth-middleware@file"

  hindsight-dashboard:
    image: ${HINDSIGHT_DASHBOARD_IMAGE:-hindsight-dashboard:latest}
    build:
      context: ./apps/hindsight-dashboard
      dockerfile: Dockerfile
      args:
        REACT_APP_HINDSIGHT_SERVICE_API_URL: https://api.hindsight-ai.com # Point to the new API subdomain
    container_name: hindsight-dashboard
    environment:
      REACT_APP_HINDSIGHT_SERVICE_API_URL: https://api.hindsight-ai.com # Point to the new API subdomain
    depends_on:
      - hindsight-service
    networks:
      - hindsight-ai
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hindsight-dashboard.rule=Host(`dashboard.hindsight-ai.com`) && PathPrefix(`/`)"
      - "traefik.http.routers.hindsight-dashboard.entrypoints=websecure"
      - "traefik.http.routers.hindsight-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.hindsight-dashboard.loadbalancer.server.port=80"
      - "traefik.http.routers.hindsight-dashboard.middlewares=oauth-middleware@file"

networks:
  hindsight-ai:
    driver: bridge

volumes:
  db_data:
